@model IEnumerable<DAL.Models.DTO>

@{
    ViewData["Title"] = "Slideshow";
}

<div class="container">
    <div class="slidecontainer">
        <input type="range" min="500" max="5000" value="2250" class="slider" id="myRange">
    </div>
    <div id="valueSlider"></div>
    <div class="row">
        <div id="slideshow" class="carousel slide" data-ride="carousel" data-interval="50" data-pause="false">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img class="d-block w-100 img-thumbnail" src="../../../../@(Model.ElementAt(0).Picture)" alt="@Model.ElementAt(0).WordNativeLang">
                    <div class="carousel-caption d-none d-md-block">
                        <h1>@(Model.ElementAt(0).WordNativeLang) (@(Model.ElementAt(0).WordLearnLang))</h1>
                    </div>
                </div>
                @foreach (var word in Model.Skip(1))
                {
                    <div class="carousel-item">
                        <img class="d-block w-100 img-thumbnail" src="../../../../@word.Picture" alt="@word.WordNativeLang">
                        <div class="carousel-caption d-none d-md-block">
                            <h1>@word.WordNativeLang (@word.WordLearnLang)</h1>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<style>
    .carousel-caption {
        position: relative;
        left: auto;
        right: auto;
        color: black;
    }
</style>

<script>
    var slider = document.getElementById("myRange");
    var output = document.getElementById("valueSlider");
    var slideshow = document.getElementsByClassName('carousel-item')

    for (let i = 0; i < slideshow.length; i++) {
        slideshow[i].style.transitionDelay = slider.value + "ms";
    }

    output.innerHTML = slider.value;

    slider.oninput = function () {
        for (let i = 0; i < slideshow.length; i++) {
            slideshow[i].style.transitionDelay = this.value + "ms";
        }
        output.innerHTML = this.value;
    }
</script>